***********************************************************************
* THIS CODE READS THE MEMBER OF JPRHEAD SPECIFIED IN THE TRAILER      *
* DATA AND OUTPUTS IT TO THE PRINTER.                                 *
***********************************************************************
         SPACE 1
         TM    J1DFLAG3,J1DF3T     IS A TRAILER REQUIRED?
         BNO   DHC3TREX            NO, BYPASS THIS CODE
         MVC   P3DMEMB,J1DTMEM     YES, COPY MEMBER NAME
         SPACE 2
         LA    R15,P3DHEAD         POINT TO DCB
         OPEN  ((R15),INPUT),MF=(E,J1DOPENX) OPEN PDS
         EJECT ,
DHC300CA DS    0H                  PROCESS TRAILER DATA
         LA    R2,P3DHEDSW         POINT AT MDSCB
         BAL   R4,PDSFIND          GET THE MEMBER
         LTR   R1,R1               DID WE?
         BZ    DHC300CB            YES, CONTINUE
*        PLACE ANY ERROR MESSAGING HERE
         B     DHC3TREX            BYPASS THE REST OF THIS CODE
         SPACE 1
DHC300CB DS    0H                  PROCESS TRAILER DATA MEMBER
         LA    R2,P3DHEDSW         POINT AT MDSCB
         BAL   R4,PDSGET           READ DATA FROM PDS
         LTR   R1,R1               TEST FOR DATA
         BZ    DHC300CX            NONE, FINISHED
         CLI   4(R1),C'*'          IS IT A COMMENT?
         BE    DHC300CB            YES, IGNORE IT
         LH    R0,0(,R1)           GET LENGTH OF DATA
         SH    R0,=H'5'            CORRECT LENGTH FOR RDW + CC
         MVC   J1DCONCH,4(R1)      COPY CARRIAGE CONTROL
         LA    R1,5(,R1)           SKIP RDW + CC
         BAS   R14,P3WLOCS         PRINT HEADER
         B     DHC300CB            GO ROUND FOR MORE
         EJECT ,
***********************************************************************
* HERE ARE THE STANDARD I/O COMPONENTS USED BY DHC CODE               *
***********************************************************************
         SPACE 2
*********************************************************************** LEM00427
*        PARTITIONED DATA SET PROCESSING SUBROUTINES                  * LEM00428
*********************************************************************** LEM00429
         SPACE 1                                                        LEM00430
PDSFIND  EQU   *                                                        LEM00432
         LA    R15,8               SET CONDITION FOR D/S NOT OPEN       LEM00433
         USING MDCB,R2             ESTABLISH ADDRESSABILITY
         L     R1,MDCBDCB          GET DCB ADDRESS                      LEM00437
         FIND  (1),P3DMEMB,D       LOCATE MEMBER                        LEM00438
PDSFINDX EQU   *                                                        LEM00439
         LR    R1,R15              PUT RETURN CODE IN R1                LEM00440
         BR    R4                  RETURN TO CALLER                     LEM00441
         SPACE 3                                                        LEM00442
PDSGET   RIN   (R2,R3,R4,R6)       SUB-ROUTINE ENTRY                    LEM00443
         L     R6,MDCBDCB          GET ADDRESS OF DCB
         USING IHADCB,R6           ESTABLISH DCB ADDRESSABILITY
         TM    P3DSW1,FIRSTGET     FIRST RECORD FOR NEW MEMBER?         LEM00450
         BO    PDSGET1             NO,BRANCH                            LEM00451
         GETBUF (R6),(R4)         GET ADDRESS FOR FIRST BUFFER          LEM00452
         ST    R4,P3DABUF1         SAVE IT                              LEM00453
         GETBUF (R6),(R4)         GET ADDRESS FOR SECOND BUFFER         LEM00454
         ST    R4,P3DABUF2         SAVE IT                              LEM00455
         READ  P3DECB1,SF,(R6),MF=E READ FIRST DATA BLOCK               LEM00456
         OI    P3DSW1,FIRSTGET+READREQ INDICATE FIRST READ              LEM00457
         SPACE 2                                                        LEM00458
PDSGET1  DS    0H                  SUBSEQUENT READS                     LEM00459
         TM    P3DSW1,READREQ       IS A READ REQUIRED?                 LEM00460
         BNO   PDSGET2             NO. BRANCH                           LEM00461
         CHECK P3DECB1             WAIT FOR I/O TO COMPLETE             LEM00462
         L     R2,P3DABUF1         GET DATA ADDRESS
         LA    R2,4(,R2)           SKIP OVER BDW
         ST    R2,P3DSEGAD         STORE DATA ADDRESS
         L     R2,P3DIOBA          GET ADDRESS OF IOB.                  LEM00464
         LH    R3,DCBBLKSI         GET MAXIMUM BLOCKSIZE,               LEM00465
         SH    R3,14(0,R2)         SUBTRACT IOB RESIDUAL COUNT          LEM00466
         SH    R3,=H'4'            CORRECT FOR BDW
         STH   R3,P3DBYTES         TO GIVE BYTES IN NEW BLOCK.          LEM00467
         NI    P3DSW1,255-READREQ  RESET READ SWITCH                    LEM00468
         L     R1,P3DABUF2         *                                    LEM00469
         MVC   P3DABUF2,P3DABUF1   ** SWAP OVER BUFFERS                 LEM00470
         ST    R1,P3DABUF1         *                                    LEM00471
         READ  P3DECB1,SF,(R6),MF=E INITIATE READ TO FILL OTHER BUFFER  LEM00472
PDSGET2  EQU   *                                                        LEM00473
         L     R1,P3DSEGAD         GET CURRENT BUFFER SEGMENT ADDRESS   LEM00474
         LH    R3,P3DBYTES         GET BYTES LEFT IN CURRENT BUFFER     LEM00475
         LH    R2,0(,R1)           GET RECORD LENGTH                    LEM00476
         SR    R3,R2               SUBTRACT FROM BYTES LEFT IN BUFFER   LEM00477
         BP    *+8                 BRANCH IF STILL SOME LEFT            LEM00478
         OI    P3DSW1,READREQ      SET FLAG TO INVOKE PHYSICAL READ.    LEM00479
         STH   R3,P3DBYTES         SAVE BYTES LEFT IN BUFFER            LEM00480
         LA    R2,0(R1,R2)         POINT TO NEXT RECORD IN BUFFER       LEM00481
         ST    R2,P3DSEGAD         SAVE NEW ADDRESS                     LEM00482
PDSGEXIT EQU   *                                                        LEM00483
         ROUT  ,                    RETURN TO CALLER                    LEM00484
         SPACE 4                                                        LEM00485
PDSEODAD EQU   *                                                        LEM00486
         NI    P3DSW1,255-FIRSTGET SET FIRSTTIME SWITCH FOR NEXT MEMBER LEM00487
         L     R2,P3DABUF1         GET 1ST BUFFER ADDRESS               LEM00488
         FREEBUF (R6),(R2)         FREE IT                              LEM00489
         L     R2,P3DABUF2         GET 2ND BUFFER ADDRESS               LEM00490
         FREEBUF (R6),(R2)         FREE IT                              LEM00491
PDSEOF   EQU   *                                                        LEM00492
         SR    R1,R1               INDICATE END OF MEMBER               LEM00493
         B     PDSGEXIT            RETURN TO CALLER                     LEM00494
         DROP  R6                  END DCB ADDRESSABILITY               LEM00495
         EJECT                                                          LEM00496
***********************************************************************
*        CLOSE ROUTINE                                                *
***********************************************************************
         SPACE 1
CLOSE    RIN   ,                   CLOSE DATA SET
         L     R15,MDCBDCB         GET DCB ADDRESS
         CLOSE ((R15),DISP),MF=(E,J1DOPENX) CLOSE PDS
         SPACE 1
CLOSEX   DS    0H                  RETURN TO CALLER
         ROUT  ,                   SUBROUTINE EXIT
         SPACE 1
         DROP  R2                  END DD LIST ADDRESSABILITY
         SPACE 3
DHC300CX DS    0H                  TRAILER PROCESSING COMPLETED
         NI    P3DSW1,0            RESET FLAG                           LEM00457
         LA    R2,P3DHEDSW         POINT AT MDSCB
         USING MDCB,R2             ESTABLISH ADDRESSABILITY
         BAL   R4,CLOSE            GO OPEN THE PDS
         DROP  R2                  END DD LIST ADDRESSABILITY
DHC3TREX DS    0H                  TRAILER PROCESSING COMPLETED
         EJECT ,
